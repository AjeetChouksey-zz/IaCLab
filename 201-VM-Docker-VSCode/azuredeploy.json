{
"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
  "_artifactsLocation": {
    "type": "string",
    "metadata": {
    "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."  },
     "defaultValue": "https://raw.githubusercontent.com/AjeetChouksey/IaCLab/master/201-VM-Docker-VSCode"
},
  "_artifactsLocationSasToken": {
  "type": "securestring",
  "metadata": {
    "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."  },
  "defaultValue": ""
},
  "adminUsername": {
  "type": "string",
  "defaultValue": "localadmin",
  "metadata": {   "description": "Username for the Virtual Machine."}
},
  "adminPassword": {
  "type": "securestring",
  "metadata": {"description": "Password for the Virtual Machine."}
},
  "vmName": {
  "type": "string",
  "defaultValue": "ContainerDev",
  "metadata": {
  "description": "Virtual Machine Name."
  }
},
  "vmSize": {
  "type": "string",
  "defaultValue": "Standard_D2s_v3",
  "allowedValues": [
    "Standard_D2s_v3",
    "Standard_D4s_v3",
    "Standard_A2",
    "Standard_A3"
  ],
  "metadata": {"description": "Virtual Machine Size."}
  },
  "dnsLabelPrefix": {
  "type": "string",
  "metadata": {
  "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
  }
  }
},
  "variables": {
    "windowsOSVersion": "2016-Datacenter-with-Containers",
    "storageAccountName": "[take(toLower(concat(uniquestring(resourceGroup().id), parameters('vmName'))),23)]",
    "nicName": "[concat(parameters('vmName'),'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('vmName'),'PublicIP')]",
    "virtualNetworkName": "DevVNET",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "toolextensionScriptFolder": "CustomScripts",
    "toolextensionScriptFileName": "toolextension.ps1"
  },
"resources": [
  {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {"name": "Standard_LRS"},
      "kind": "Storage",
      "properties": {}
   },
  {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
          "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": { "domainNameLabel": "[parameters('dnsLabelPrefix')]"}
          }
  },
  {
    "apiVersion": "2016-03-30",
    "type": "Microsoft.Network/virtualNetworks",
    "name": "[variables('virtualNetworkName')]",
    "location": "[resourceGroup().location]",
    "properties": {
          "addressSpace": {
          "addressPrefixes": ["[variables('addressPrefix')]"]
          },
          "subnets": [
            {
            "name": "[variables('subnetName')]",
            "properties": {"addressPrefix": "[variables('subnetPrefix')]"}
            }
          ]
        }
  },
  {
  "apiVersion": "2016-03-30",
  "type": "Microsoft.Network/networkInterfaces",
  "name": "[variables('nicName')]",
  "location": "[resourceGroup().location]",
  "dependsOn": [
  "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
  "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
  ],
  "properties": {
  "ipConfigurations": [
  {
  "name": "ipconfig1",
  "properties": {
  "privateIPAllocationMethod": "Dynamic",
  "publicIPAddress": {
  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
  },
  "subnet": {
  "id": "[variables('subnetRef')]"
  }
  }
  }
  ]
  }
  },
  {
  "apiVersion": "2016-04-30-preview",
  "type": "Microsoft.Compute/virtualMachines",
  "name": "[parameters('vmName')]",
  "location": "[resourceGroup().location]",
  "dependsOn": [
  "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
  "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
  ],
  "properties": {
  "hardwareProfile": {
  "vmSize": "[parameters('vmSize')]"
  },
  "osProfile": {
  "computerName": "[parameters('vmName')]",
  "adminUsername": "[parameters('adminUsername')]",
  "adminPassword": "[parameters('adminPassword')]"
  },
  "storageProfile": {
  "imageReference": {
  "publisher": "MicrosoftWindowsServer",
  "offer": "WindowsServer",
  "sku": "[variables('windowsOSVersion')]",
  "version": "latest"
  },
  "osDisk": {
  "createOption": "FromImage"
  },
  "dataDisks": [
  ]
  },
  "networkProfile": {
  "networkInterfaces": [
  {
  "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
  }
  ]
  },
  "diagnosticsProfile": {
  "bootDiagnostics": {
  "enabled": "true",
  "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
  }
  }
  },
  "resources": [
    {
      "name": "toolextension",
      "type": "extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "tags": {
        "displayName": "toolextension"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), '/', variables('toolextensionScriptFolder'), '/', variables('toolextensionScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', '/',variables('toolextensionScriptFolder'), '/', variables('toolextensionScriptFileName'))]"
        }
      }
    }

]
}
],
"outputs": {
"hostname": {
"type": "string",
"value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
}
}
}
